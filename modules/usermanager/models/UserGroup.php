<?php

namespace reketaka\helps\modules\usermanager\models;

use reketaka\helps\common\behaviors\AliasBehavior;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;

/**
 * Class UserGroup
 * @package reketaka\helps\modules\usermanager\models
 * @property string $title
 * @property string $alias
 * @property string $created_at
 * @property string $updated_at
 */
class UserGroup extends ActiveRecord{

    public static function tableName()
    {
        return 'user_group';
    }

    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors = array_merge($behaviors, [
            [
                'class' => TimestampBehavior::class,
                'value' => \Yii::$app->formatter->asDatetime(time(), \Yii::$app->params['dateControlSave'][\kartik\datecontrol\Module::FORMAT_DATETIME]),
            ]
        ]);

        $behaviors = array_merge($behaviors, [
            [
                'class' => AliasBehavior::class,
                'event' => ActiveRecord::EVENT_BEFORE_VALIDATE
            ]
        ]);


        return $behaviors; // TODO: Change the autogenerated stub
    }

    public function rules()
    {
        return [
            [['alias'], 'unique'],
            [['title', 'alias'], 'string', 'max'=>250],
        ];
    }

    /**
     * Добавляет пользователя $userId в текушую группу
     * @param $userId
     * @return bool
     */
    public function addUser($userId){

        $modelClass = \Yii::$app->getModule('usermanager')->userModelClass;

        if(!$user = $modelClass::findOne($userId)){
            return false;
        }

        if(self::findOne(['user_id'=>$user->id, 'group_id'=>$this->id])){
            return true;
        }

        $userInGroup = new UserInGroup([
            'user_id'=>$userId,
            'group_id'=>$this->id
        ]);

        $userInGroup->save();

        if($userInGroup->hasErrors()){
            return false;
        }

        return true;
    }

    /**
     * Возвращает список пользователей которые состоят в группе
     * @return User[]
     */
    public function getUsers(){

        $modelClass = \Yii::$app->getModule('usermanager')->userModelClass;

        $usersId = UserInGroup::find()->where(['group_id'=>$this->id])->select(['user_id'])->asArray()->all();
        $usersId = ArrayHelper::getColumn($usersId, 'user_id');

        $users = $modelClass::findAll($usersId);

        return $users;
    }


}