<?php

namespace reketaka\helps\modules\catalog\models;

use common\models\Item;
use reketaka\helps\common\helpers\Bh;
use reketaka\helps\modules\catalog\Module;
use Yii;
use yii\base\BaseObject;
use yii\helpers\FileHelper;
use function file_put_contents;
use const FILE_APPEND;

class GenerateXmlPriceWork extends BaseObject{

    /**
     * @var Module $module
     */
    private $module;
    public $completePath;
    public $progressPath;

    /**
     * @var YmlConfigBase $configModel
     */
    private $configModel;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->module = Yii::$app->getModule('catalog');
        $this->progressPath = Yii::getAlias($this->module->ymlPriceProgresDir);
        $this->completePath = Yii::getAlias($this->module->ymlPriceCompleteDir);
        $this->configModel = Yii::createObject($this->module->ymlPriceConfigObject);
    }

    public function run(){
        
        FileHelper::removeDirectory($this->progressPath);
        FileHelper::createDirectory($this->progressPath);
        
        $filePath = $this->progressPath.$this->configModel->fileName;

        $baseFileArray = $this->configModel->getBaseFileArray();

        file_put_contents($filePath, $baseFileArray['start'], FILE_APPEND);

        $items = $this->configModel->getItems()
            ->each(10);

        foreach($items as $item){
            /**
             * @var $item Item
             */
            $content = $this->configModel->generateXmlItem($item);
            file_put_contents($filePath, $content, FILE_APPEND);
        }

        file_put_contents($filePath, $baseFileArray['end'], FILE_APPEND);

        FileHelper::createDirectory($this->completePath);
        FileHelper::copyDirectory($this->progressPath, $this->completePath);

        return true;
    }



}